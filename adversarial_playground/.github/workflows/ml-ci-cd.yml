name: Continuous Integration and Continuous Deployment
run-name: ${{ github.actor }} submitted a CI CD Action for ML Tasks
on:
  push:
    branches: [ "main" ]

jobs:
  Explore-GitHub-Actions:
    if: contains(github.event.head_commit.message, '/run-')
    runs-on: ubuntu-latest
    steps:
      - run: echo "Comment ${{ github.event.head_commit.message }}"
      - run: echo "Job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "Job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "Branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - id: 'auth'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
      - name: Configure Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker # --quiet #authenticate to gcr
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Build Deployment Container 
        run: |-
          cd ${{ github.workspace }}/src/resnet_workflow/
          docker build -t ap-app-deployment -f Dockerfile .
      - name: Run Resnet ML Pipeline
        if: contains(github.event.head_commit.message, '/run-resnet-pipeline')
        run: |-
          docker run --rm --name ap-app-deployment \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${{ github.workspace }}/src/resnet_workflow:/resnet_workflow \
            --mount type=bind,source=$GOOGLE_APPLICATION_CREDENTIALS,target=/secrets/deployment.json \
            -e GOOGLE_APPLICATION_CREDENTIALS=/secrets/deployment.json \
            -e USE_GKE_GCLOUD_AUTH_PLUGIN=True \
            -e GCP_PROJECT=secret-cipher-399620 \
            -e GCP_ZONE=us-east1 \
            -e GCS_BUCKET_NAME_NORM=resnet-models-ac215 \
            -e GCS_BUCKET_NAME_ADV=pgd-at-resnet-models-ac215 \
            -e GCS_SERVICE_ACCOUNT=ml-workflow@secret-cipher-399620.iam.gserviceaccount.com \
            -e GCP_REGION=us-east1 \
            -e GCS_PACKAGE_URI_NORM=gs://resnet-trainer \
            -e GCS_PACKAGE_URI_ADV=gs://pgd-at-resnet-trainer \
            -e WANDB_KEY=${{ secrets.WANDB_KEY }} \
            ap-app-deployment
      - run: echo "Job's status is ${{ job.status }}."

      - name: Build Deployment Container 
        run: |-
          cd ${{ github.workspace }}/src/alexnet_workflow/
          docker build -t ap-app-a-deployment -f Dockerfile .
      - name: Run Alexnet ML Pipeline
        if: contains(github.event.head_commit.message, '/run-alexnet-pipeline')
        run: |-
          docker run --rm --name ap-app-a-deployment \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${{ github.workspace }}/src/alexnet_workflow:/alexnet_workflow \
            --mount type=bind,source=$GOOGLE_APPLICATION_CREDENTIALS,target=/secrets/deployment.json \
            -e GOOGLE_APPLICATION_CREDENTIALS=/secrets/deployment.json \
            -e USE_GKE_GCLOUD_AUTH_PLUGIN=True \
            -e GCP_PROJECT=secret-cipher-399620 \
            -e GCP_ZONE=us-east1 \
            -e GCS_BUCKET_NAME_NORM=alexnet-models-ac215 \
            -e GCS_BUCKET_NAME_ADV=pgd-at-alexnet-models-ac215 \
            -e GCS_SERVICE_ACCOUNT=ml-workflow@secret-cipher-399620.iam.gserviceaccount.com \
            -e GCP_REGION=us-east1 \
            -e GCS_PACKAGE_URI_NORM=gs://alexnet-trainer \
            -e GCS_PACKAGE_URI_ADV=gs://pgd-at-alexnet-trainer \
            -e WANDB_KEY=${{ secrets.WANDB_KEY }} \
            ap-app-a-deployment
      - run: echo "Job's status is ${{ job.status }}."